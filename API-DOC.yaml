openapi: 3.0.0
info:
  title: Rezept-API
  version: 1.0.0
  description: |-
    Die API bietet die Möglichkeit, Rezepte und Benutzer zu verwalten. Zu den Funktionen zählen das Hinzufügen, Abrufen, Aktualisieren und Löschen von Rezepten und Benutzern sowie die Authentifizierung von Benutzern und das Verwalten von Kommentaren zu Rezepten.

servers:
  - url: http://localhost:3000/api
tags:
  - name: recipe
    description: Verwaltet die Rezeptdaten an sich sowie die Kommentare zu dem entsprechenden Rezept
  - name: user
    description: Verwaltet die Benutzerdaten

paths:
  # Rezept-Endpunkte
  /recipe:
    get:
      tags:
        - recipe
      summary: Bekomme alle Rezepte
      operationId: getAllRecipes
      responses:
        '200':
          description: Liste der Rezepte
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    post:
      tags:
        - recipe
      summary: Füge ein neues Rezept hinzu
      operationId: addRecipe
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                ingredients:
                  type: array
                  items:
                    type: string
                instructions:
                  type: string
      responses:
        '201':
          description: Rezept erfolgreich erstellt
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
        '401':
          description: Unautorisiert
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /recipe/top:
    get:
      tags:
        - recipe
      summary: Bekomme die Top 5-Rezepte
      operationId: getTopRecipes
      responses:
        '200':
          description: Liste der Top 5-Rezepte
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /recipe/random:
    get:
      tags:
        - recipe
      summary: Bekomme zufällige Rezept ID
      operationId: getRandomRecipe
      responses:
        '200':
          description: Zufälliges Rezept gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  authorId:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /recipe/{id}:
    get:
      tags:
        - recipe
      summary: Bekomme ein Rezept nach ID
      operationId: getRecipeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rezept gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
        '404':
          description: Rezept nicht gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      tags:
        - recipe
      summary: Aktualisiere ein Rezept
      operationId: updateRecipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                ingredients:
                  type: array
                  items:
                    type: string
                instructions:
                  type: string
      responses:
        '200':
          description: Rezept erfolgreich aktualisiert
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Rezept nicht gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      tags:
        - recipe
      summary: Lösche ein Rezept
      operationId: deleteRecipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rezept erfolgreich gelöscht
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Rezept nicht gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /recipe/{id}/comments:
    put:
      tags:
        - recipe
      summary: Füge einen Kommentar zu einem Rezept hinzu
      operationId: addCommentToRecipe
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
      responses:
        '200':
          description: Kommentar erfolgreich hinzugefügt
          content:
            text/plain:
              schema:
                type: string
        '204':
          description: Keine Kommentare vorhanden
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unautorisiert
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /recipe/user/{id}:
    get:
      tags:
        - recipe
      summary: Bekomme Rezepte nach Benutzer-ID
      operationId: getRecipesByUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Liste der Rezepte für den Benutzer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
        '204':
          description: Keine Rezepte für den Benutzer gefunden
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /recipe/comment/{id}:
    get:
      tags:
        - recipe
      summary: Bekomme Kommentare nach Benutzer-ID
      operationId: getCommentsByUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Liste der Kommentare für den Benutzer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    comment:
                      type: string
        '404':
          description: Kommentar nicht gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # Benutzer-Endpunkte
  /user:
    get:
      tags:
        - user
      summary: Bekomme alle Benutzer
      operationId: getAllUsers
      responses:
        '200':
          description: Liste der Benutzer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    username:
                      type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/{userId}:
    get:
      tags:
        - user
      summary: Bekomme einen Benutzer nach ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Benutzer gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/register:
    post:
      tags:
        - user
      summary: Registriere einen neuen Benutzer
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                acceptTerms:
                  type: boolean
      responses:
        '201':
          description: Benutzer erfolgreich registriert
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/login:
    post:
      tags:
        - user
      summary: Benutzer-Login
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Anmeldung erfolgreich
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
        '401':
          description: Ungültiger Benutzername oder Passwort
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/{id}:
    delete:
      tags:
        - user
      summary: Lösche einen Benutzer
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Benutzer erfolgreich gelöscht
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Benutzer nicht gefunden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic